# Docker Compose configuration for local development environment
# Based on TRD-109 and TRD-112 requirements

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bizass-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: bizass_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    container_name: bizass-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: bizass_platform
      JWT_SECRET: ${JWT_SECRET:-U+EiJRZ+PrsuUnmnocqipOjKT53J4TvL5YUXnrrrFvk=}
      FRONTEND_URL: http://localhost:3000
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-your-telegram-bot-token-here}
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - ./shared:/shared
      - /app/node_modules
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (for development)
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    container_name: bizass-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: http://localhost:3001
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - ./shared:/shared
      - /app/node_modules
    depends_on:
      - backend
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  backend_uploads:
    driver: local

networks:
  default:
    name: bizass-network
