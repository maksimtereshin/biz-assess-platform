# Docker Compose configuration for local development environment
# Optimized for hot reloading and development workflow
# Run with: docker-compose -f docker-compose.dev.yml up

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bizass-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_DB: bizass_platform
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Service with hot reloading
  backend:
    build:
      context: .
      dockerfile: ./backend/Dockerfile.dev
    container_name: bizass-backend-dev
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_NAME: bizass_platform
      JWT_SECRET: dev-jwt-secret-key-not-for-production
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN:-your-telegram-bot-token-here}
      # Development specific
      DEBUG: "true"
      LOG_LEVEL: debug
    ports:
      - "3001:3001"
      - "9229:9229"  # Node.js debugger port
    volumes:
      # Mount source code for hot reloading
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/nest-cli.json:/app/nest-cli.json
      - ./shared:/shared
      - ./.env.dev:/app/.env.dev:ro
      # Persist uploads only, node_modules are built into the image
      - backend_uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3001/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service with Vite hot module replacement
  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    container_name: bizass-frontend-dev
    restart: unless-stopped
    env_file:
      - .env.dev
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:3001}
      VITE_WS_URL: ${VITE_WS_URL:-ws://localhost:3001}
      VITE_PROXY_TARGET: http://backend:3001
      # Development specific
      NODE_ENV: development
      CHOKIDAR_USEPOLLING: "true"  # Enable polling for file watching in Docker
    ports:
      - "3000:3000"  # Vite dev server on port 3000
    volumes:
      # Mount source code for hot reloading
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/package.json:/app/package.json
      - ./frontend/vite.config.ts:/app/vite.config.ts
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/tsconfig.node.json:/app/tsconfig.node.json
      - ./frontend/postcss.config.js:/app/postcss.config.js
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
      - ./shared:/shared
      - ./.env.dev:/app/.env.dev:ro
      # node_modules are built into the image, no volume needed
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0

  # Optional: Adminer for database management
  adminer:
    image: adminer:latest
    container_name: bizass-adminer-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha
    depends_on:
      - postgres
    profiles:
      - tools

  # Optional: Redis for caching (if needed in future)
  redis:
    image: redis:7-alpine
    container_name: bizass-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - cache

volumes:
  postgres_dev_data:
    driver: local
  backend_uploads:
    driver: local
  redis_dev_data:
    driver: local

networks:
  default:
    name: bizass-dev-network
    driver: bridge